services:

  traefik-app:
    image: tiredofit/traefik:2.10
    container_name: traefik-app
    environment:
      - CONTAINER_NAME=traefik-app

      - LETSENCRYPT_EMAIL=dnsadmin@example.com
      - LETSENCRYPT_CHALLENGE=DNS
      - LETSENCRYPT_DNS_PROVIDER=cloudflare

      - CF_API_EMAIL=dnsadmin@example.com
      - CF_API_KEY=randomapikeyfromcloudflare

      - DASHBOARD_HOSTNAME=traefik.example.com
      - DOCKER_ENDPOINT=http://socket-proxy:2375 
      # - DOCKER_ENDPOINT=unix:///var/run/docker.sock
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./config:/data/config
      - ./logs:/data/logs
      - ./certs:/data/certs
      # - /var/run/docker.sock:/var/run/docker.sock # if not using socket-proxy
    networks:
      - proxy
      - socket-proxy 
    depends_on:
      - socket-proxy
    restart: always
    

  whoami:
    container_name: whoami
    image: containous/whoami:v1.3.0
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.rule=Host(`whoami.example.com`) || Host(`whoami2.example.com`)
      - traefik.http.services.whoami.loadbalancer.server.port=80
    networks:
      - proxy
    restart: always

socket-proxy:
    image: tiredofit/socket-proxy:latest
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./logs/socket-proxy:/logs
    environment:
      - ALLOWED_IPS=127.0.0.1,172.19.0.0/16 # depends on the range you assigned to the socket-proxy network
      - ENABLE_READONLY=FALSE
      - MODE=ALL # containers,events,networks,ping,services,tasks,version
    networks:
      socket-proxy:
        aliases:
          - socket-proxy
    restart: "unless-stopped"

networks:
  proxy:
    external: true
